# Importing required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Create mock data simulating Meesho sales information
data = {
    'product_id': [101, 102, 103, 104, 105, 106, 107],
    'product_name': ['T-shirt', 'Jeans', 'Saree', 'Shirt', 'Kurti', 'Shoes', 'Bag'],
    'category': ['Clothing', 'Clothing', 'Clothing', 'Clothing', 'Clothing', 'Footwear', 'Accessories'],
    'price': [299, 799, 1499, 599, 699, 1299, 499],
    'units_sold': [150, 120, 200, 180, 210, 160, 140],
    'ratings': [4.2, 4.5, 3.8, 4.0, 4.1, 4.3, 4.4],
    'sale_date': pd.to_datetime(['2024-10-01', '2024-10-02', '2024-10-03', '2024-10-04', '2024-10-05', 
                                 '2024-10-06', '2024-10-07'])
}

# Creating a DataFrame from the mock data
df = pd.DataFrame(data)

# Step 1: Data Exploration
print("Data Overview:")
print(df.head())  # Print first 5 rows
print("\nMissing values:")
print(df.isnull().sum())  # Check for missing data
print("\nDescriptive Statistics:")
print(df.describe())  # Descriptive stats for numeric columns

# Step 2: Data Analysis

# 2.1. Calculate total revenue per product
df['total_revenue'] = df['price'] * df['units_sold']

# Show total revenue for each product
print("\nTotal Revenue per Product:")
print(df[['product_name', 'total_revenue']])

# 2.2. Average rating by category
avg_rating_by_category = df.groupby('category')['ratings'].mean()
print("\nAverage Rating by Category:")
print(avg_rating_by_category)

# 2.3. Best-selling products based on units sold
best_selling = df.sort_values(by='units_sold', ascending=False)
print("\nBest Selling Products:")
print(best_selling[['product_name', 'units_sold']])

# Step 3: Data Visualization

# 3.1. Plot: Total Revenue by Product
plt.figure(figsize=(10, 6))
sns.barplot(x='product_name', y='total_revenue', data=df)
plt.title('Total Revenue by Product')
plt.xlabel('Product')
plt.ylabel('Total Revenue')
plt.xticks(rotation=45)
plt.show()

# 3.2. Plot: Average Rating by Category
plt.figure(figsize=(8, 5))
sns.boxplot(x='category', y='ratings', data=df)
plt.title('Ratings Distribution by Product Category')
plt.xlabel('Category')
plt.ylabel('Ratings')
plt.show()

# 3.3. Plot: Units Sold by Product (Best Selling Products)
plt.figure(figsize=(10, 6))
sns.barplot(x='product_name', y='units_sold', data=best_selling)
plt.title('Units Sold by Product')
plt.xlabel('Product')
plt.ylabel('Units Sold')
plt.xticks(rotation=45)
plt.show()

# Step 4: Sales Trend Over Time (Using a mock sales trend, if you had more data)
# For now, we simulate total units sold over a period (just 7 days in our mock data)

df['day'] = df['sale_date'].dt.day
daily_sales = df.groupby('sale_date')['units_sold'].sum().reset_index()

# Plot: Daily Sales Trend
plt.figure(figsize=(10, 6))
sns.lineplot(x='sale_date', y='units_sold', data=daily_sales)
plt.title('Daily Sales Trend')
plt.xlabel('Date')
plt.ylabel('Units Sold')
plt.xticks(rotation=45)
plt.show()
